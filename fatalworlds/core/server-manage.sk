function doesWorldExist(w: text) :: boolean:
	loop all worlds:
		return true if loop-world contains {_w}
	return false

function doesPlayerOwnWorld(p: player) :: boolean:
	set {_uuid} to {_p}'s uuid
	return true if {hasworld::*} contains {_uuid}
	return false

function isPlayerWorldOwner(p: player, w: text) :: boolean:
	set {_uuid} to {_p}'s uuid
	return true if {worlds::%{_w}%::owner} is {_uuid}
	return false

function ManageWorld(a: text, o: offline player, w: text):
	if {_a} is "activate":
		if {world::%{_w}%::status} is "offline":
			send "&aWe are activating your world... &7&oThis may take awhile depending on server resources." to {_o}
			execute console command "mvload %{_w}%"
			wait 0.5 second
			if doesWorldExist("%{_w}%") is false:
				send "&cAn error has occurred, please contact an administator." to {_o}
				stop
			send "&aYour world has been activated. Use /join %{_w}% &ato join your world." to {_o}
			set {world::%{_w}%::status} to "online"
			stop
		if {world::%{_w}%::status} is "online":
			send "&cYour world is already activated, use /join %{_w}% &cto join your world." to {_o}
			stop
	if {_a} is "create":
		send "&aWe are creating your world... &7&oThis may take awhile depending on server resources." to {_o}
		execute console command "mvcreate %{_w}% normal -g VoidGen"
		wait 0.5 second
		if doesWorldExist("%{_w}%") is false:
			send "&cAn error has occurred, remove any symbols and try again." to {_o}
			stop
		send "&aWe have created your world, use &2/join %{_w}% &ato join your world." to {_o}
		set {_uuid} to {_o}'s uuid
		set {worlds::%{_w}%::owner} to {_uuid}
		set {worlds::%{_uuid}%::world} to {_w}
		add {_uuid} to {hasworld::*}
		set {world::%{_w}%::status} to "online"
	if {_a} is "deactivate":
		if {world::%{_w}%::status} is "online":
			send "&cWe are deactivating your world..." to {_o}
			execute console command "mvunload %{_w}%"
			wait 0.5 second
			if doesWorldExist("%{_w}%") is true:
				send "&cAn error has occurred, please contact an administator." to {_o}
				stop
			send "&cYour world has been deactivated. Use /activate %{_w}% &cto reactivate your world." to {_o}
			set {world::%{_w}%::status} to "offline"
			stop
		if {world::%{_w}%::status} is "offline":
			send "&cYour world is already deactivated, use /activate %{_w}% &cto reactivate your world." to {_o}
			stop
	if {_a} is "delete":
		set {_uuid} to {_o}'s uuid
		send "&cWe are deleting your world... &7&oThis may take awhile depending on server resources." to {_o}
		delete {worlds::%{_w}%::owner}
		delete {worlds::%{_uuid}%::world}
		remove {_uuid} from {hasworld::*}
		delete {world::%{_w}%::status}
		execute console command "mvdelete %{_w}%"
		execute console command "mvconfirm"
		wait 0.5 second
		send "&cWe have deleted your world." to {_o}

command /create <text>:
	executable by: players
	trigger:
		if doesPlayerOwnWorld(sender) is true:
			send "&cYou already own a world! Please delete your old world before using another name." to sender
			stop
		if doesWorldExist(arg-1) is true:
			send "&c%arg-1% &calready exists! Please try another name." to sender
			stop
		ManageWorld("create", sender, arg-1)

command /delete <text>:
	executable by: players
	trigger:
		if doesPlayerOwnWorld(sender) is false:
			send "&cYou don't currently own a world. Use /create to create one." to sender
			stop
		if isPlayerWorldOwner(sender, arg-1) is false:
			send "&cYou don't own this world or it's a SERVER world." to sender
			stop
		ManageWorld("delete", sender, arg-1)

command /join <text>:
	executable by: players
	trigger:
		if doesWorldExist(arg-1) is false:
			send "&c%arg-1% doesn't exist or isn't activated! Please check the argument." to sender
		make console execute command "mvtp %sender% %arg-1%"

command /activate <text>:
	trigger:
		if doesPlayerOwnWorld(sender) is false:
			send "&cYou don't currently own a world. Use /create to create one." to sender
			stop
		if doesWorldExist(arg-1) is true:
			send "&c%arg-1% &cis already activated." to sender
			stop
		if isPlayerWorldOwner(sender, arg-1) is false:
			send "&cYou don't own this world or it's a SERVER world." to sender
			stop
		ManageWorld("activate", sender, arg-1)

command /deactivate <text>:
	trigger:
		if doesPlayerOwnWorld(sender) is false:
			send "&cYou don't currently own a world. Use /create to create one." to sender
			stop
		if doesWorldExist(arg-1) is false:
			send "&c%arg-1% &cis already deactivated." to sender
			stop
		if isPlayerWorldOwner(sender, arg-1) is false:
			send "&cYou don't own this world or it's a SERVER world." to sender
			stop
		ManageWorld("deactivate", sender, arg-1)