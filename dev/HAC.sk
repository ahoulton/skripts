# -- OPTIONS --
options:
    alertperm: hac.alert
    prefix: &b[HAC]
    maxhjumpa: 1.3
    maxljumpa: .1
    maxlcps: 15
    maxreacha: 5.3
    maxreachb: 5.67
    maxantikba: .2
    maxantikbb: .5

# -- MISC STUFF --
function HACNotify(p: player, o: text):
    send formatted "{@prefix} &3%{_p}% &7flagged &3%{_o}%&7." to all players where [input has permission "{@alertperm}"]

command hac:debugalerts:
    executable by: players
    permission: hac.debugalerts
    permission message: &cYou cannot debug alerts. &7[&cNEED_PERM&7]
    trigger:
        if {hac-debugging::*} doesn't contain player's uuid:
            add player's uuid to {hac-debugging::*}
            send "{@prefix} &7You will now get debug messages with alerts." to player
        else if {hac-debugging::*} contain player's uuid:
            remove player's uuid from {hac-debugging::*}
            send "{@prefix} &7You will no longer get debug messages with alerts." to player
# -- MISC STUFF --

# -- AUTOCLICKER --
on left click:
    add 1 to {lcps.%player%}
    wait 1 second
    remove 1 from {lcps.%player%}

on left click:
    {lcps.%player%} >= {@maxlcps}
    HACNotify(player, "AutoClicker")
# -- AUTOCLICKER --

# -- HIGHJUMP --
on jump:
    event isn't cancelled
    set {_a} to y location of player
    wait 5 ticks
    set {_b} to y location of player
    player's flight mode isn't true
    difference between {_a} and {_b} > {@maxhjumpa}
    HACNotify(player, "High Jump (A)")
# -- HIGHJUMP --

# -- REACH --
on damage:
    event isn't cancelled
    attacker is a player
    attacker's gamemode isn't creative
    block above attacker is air
    if block below attacker isn't ice or packed ice:
        distance between attacker and victim > {@maxreacha}
        HACNotify(attacker, "Reach (A)")
    else:
        distance between attacker and victim > {@maxreachb}
        HACNotify(attacker, "Reach (B)")
# -- REACH --

# -- Velocity --
#on damage: # thanks 100_
    #event isn't cancelled
    #damage cause = attack
    #victim = player
    #attacker's gamemode isn't creative
    #block behind victim is air
    #set {_a} to location of victim
    #wait 5 ticks
    #set {_b} to location of victim
    #if block below victim isn't ice or packed ice:
        #distance between {_a} and {_b} < {@maxantikba}
        #HACNotify(victim, "Velocity (A)")
    #else:
        #distance between {_a} and {_b} < {@maxantikbb}
        #HACNotify(victim, "Velocity (B)")
# -- Velocity --